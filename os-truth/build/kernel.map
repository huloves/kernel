
分配公共符号
公共符号            大小              文件

thread_ready_list   0x10              build/thread.o
thread_all_list     0x10              build/thread.o
user_pool           0x10              build/memory.o
intr_name           0x84              build/interrupt.o
main_thread         0x4               build/thread.o
ticks               0x4               build/timer.o
kernel_vaddr        0xc               build/memory.o
idt_table           0x84              build/interrupt.o
kernel_pool         0x10              build/memory.o

舍弃的输入节

 .group         0x0000000000000000        0x8 build/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/main.o
 .group         0x0000000000000000        0x8 build/init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/init.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/init.o
 .group         0x0000000000000000        0x8 build/interrupt.o
 .group         0x0000000000000000        0x8 build/interrupt.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/interrupt.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/interrupt.o
 .group         0x0000000000000000        0x8 build/timer.o
 .group         0x0000000000000000        0x8 build/timer.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/timer.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/timer.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/timer.o
 .group         0x0000000000000000        0x8 build/debug.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/debug.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/debug.o
 .group         0x0000000000000000        0x8 build/memory.o
 .group         0x0000000000000000        0x8 build/memory.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/memory.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/memory.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/memory.o
 .group         0x0000000000000000        0x8 build/bitmap.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/bitmap.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/bitmap.o
 .group         0x0000000000000000        0x8 build/string.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/string.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/string.o
 .group         0x0000000000000000        0x8 build/thread.o
 .group         0x0000000000000000        0x8 build/thread.o
 .group         0x0000000000000000        0x8 build/thread.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/thread.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/thread.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/thread.o
 .group         0x0000000000000000        0x8 build/list.o
 .group         0x0000000000000000        0x8 build/list.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/list.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/list.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/list.o
 .group         0x0000000000000000        0x8 build/console.o
 .group         0x0000000000000000        0x8 build/console.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/console.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/console.o
 .group         0x0000000000000000        0x8 build/sync.o
 .group         0x0000000000000000        0x8 build/sync.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/sync.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/sync.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/sync.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0xc0001500
LOAD build/main.o
LOAD build/init.o
LOAD build/interrupt.o
LOAD build/timer.o
LOAD build/kernel.o
LOAD build/print.o
LOAD build/debug.o
LOAD build/memory.o
LOAD build/bitmap.o
LOAD build/string.o
LOAD build/thread.o
LOAD build/list.o
LOAD build/switch.o
LOAD build/console.o
LOAD build/sync.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 build/main.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 build/main.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 build/main.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 build/main.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x24ca
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500      0x166 build/main.o
                0x00000000c0001500                main
                0x00000000c00015c6                k_thread_a
                0x00000000c00015ee                k_thread_b
                0x00000000c0001616                k_thread_c
                0x00000000c000163e                k_thread_d
 .text.__x86.get_pc_thunk.bx
                0x00000000c0001666        0x4 build/main.o
                0x00000000c0001666                __x86.get_pc_thunk.bx
 .text          0x00000000c000166a       0x43 build/init.o
                0x00000000c000166a                init_all
 .text          0x00000000c00016ad      0x54f build/interrupt.o
                0x00000000c0001a9e                intr_enable
                0x00000000c0001ad1                intr_disable
                0x00000000c0001b04                intr_set_status
                0x00000000c0001b2c                intr_get_status
                0x00000000c0001b53                register_handler
                0x00000000c0001b7c                idt_init
 .text.__x86.get_pc_thunk.ax
                0x00000000c0001bfc        0x4 build/interrupt.o
                0x00000000c0001bfc                __x86.get_pc_thunk.ax
 .text          0x00000000c0001c00      0x1b8 build/timer.o
                0x00000000c0001d50                timer_init
 *fill*         0x00000000c0001db8        0x8 
 .text          0x00000000c0001dc0      0x456 build/kernel.o
                0x00000000c0001dc0                intr_exit
 *fill*         0x00000000c0002216        0xa 
 .text          0x00000000c0002220      0x1a0 build/print.o
                0x00000000c0002220                put_str
                0x00000000c0002244                put_int
                0x00000000c00022c5                put_char
                0x00000000c000239c                set_cursor
 .text          0x00000000c00023c0       0xf4 build/debug.o
                0x00000000c00023c0                panic_spin
 .text          0x00000000c00024b4      0x5e3 build/memory.o
                0x00000000c000254d                pte_ptr
                0x00000000c0002587                pde_ptr
                0x00000000c00026ef                malloc_page
                0x00000000c0002797                get_kernel_pages
                0x00000000c0002a43                mem_init
 .text          0x00000000c0002a97      0x22e build/bitmap.o
                0x00000000c0002a97                bitmap_init
                0x00000000c0002aca                bitmap_scan_test
                0x00000000c0002b14                bitmap_scan
                0x00000000c0002c29                bitmap_set
 .text          0x00000000c0002cc5      0x2dd build/string.o
                0x00000000c0002cc5                memset
                0x00000000c0002d02                memcpy
                0x00000000c0002d47                memcmp
                0x00000000c0002daf                strcpy
                0x00000000c0002de9                strlen
                0x00000000c0002e1f                strcmp
                0x00000000c0002e7a                strchr
                0x00000000c0002ebd                strrchr
                0x00000000c0002f06                strcat
                0x00000000c0002f55                strchrs
 .text          0x00000000c0002fa2      0x441 build/thread.o
                0x00000000c0002fa2                running_thread
                0x00000000c0002fed                thread_create
                0x00000000c0003071                init_thread
                0x00000000c0003116                thread_start
                0x00000000c00031fc                schedule
                0x00000000c000329f                thread_block
                0x00000000c00032e3                thread_unblock
                0x00000000c000337e                thread_init
 .text.__x86.get_pc_thunk.dx
                0x00000000c00033e3        0x4 build/thread.o
                0x00000000c00033e3                __x86.get_pc_thunk.dx
 .text          0x00000000c00033e7      0x25f build/list.o
                0x00000000c00033e7                list_init
                0x00000000c000341f                list_insert_before
                0x00000000c0003473                list_push
                0x00000000c000349b                list_append
                0x00000000c00034c3                list_remove
                0x00000000c000350c                list_pop
                0x00000000c0003538                elem_find
                0x00000000c000357d                list_traversal
                0x00000000c00035e4                list_len
                0x00000000c0003623                list_empty
 *fill*         0x00000000c0003646        0xa 
 .text          0x00000000c0003650       0x15 build/switch.o
                0x00000000c0003650                switch_to
 .text          0x00000000c0003665      0x119 build/console.o
                0x00000000c0003665                console_init
                0x00000000c0003690                console_acquire
                0x00000000c00036bb                console_release
                0x00000000c00036e6                console_put_str
                0x00000000c0003716                console_put_char
                0x00000000c000374e                console_put_int
 .text          0x00000000c000377e      0x24c build/sync.o
                0x00000000c000377e                sema_init
                0x00000000c00037b8                lock_init
                0x00000000c00037f2                sema_down
                0x00000000c00038a0                sema_up
                0x00000000c0003918                lock_acquire
                0x00000000c0003977                lock_release
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000c00039cc      0x56a
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c00039cc       0x57 build/main.o
 .rodata        0x00000000c0003a23        0xa build/init.o
 *fill*         0x00000000c0003a2d        0x3 
 .rodata        0x00000000c0003a30      0x2bd build/interrupt.o
 *fill*         0x00000000c0003ced        0x3 
 .rodata        0x00000000c0003cf0       0x6b build/timer.o
 .rodata        0x00000000c0003d5b       0x41 build/debug.o
 .rodata        0x00000000c0003d9c       0xd3 build/memory.o
 *fill*         0x00000000c0003e6f        0x1 
 .rodata        0x00000000c0003e70       0x7b build/thread.o
 *fill*         0x00000000c0003eeb        0x1 
 .rodata        0x00000000c0003eec       0x4a build/sync.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c0003f38      0xabc
 *(.eh_frame)
 .eh_frame      0x00000000c0003f38       0xc4 build/main.o
 .eh_frame      0x00000000c0003ffc       0x24 build/init.o
                                         0x50 (松开之前的大小)
 .eh_frame      0x00000000c0004020      0x1b4 build/interrupt.o
                                        0x1e0 (松开之前的大小)
 .eh_frame      0x00000000c00041d4       0x94 build/timer.o
                                         0xd4 (松开之前的大小)
 .eh_frame      0x00000000c0004268       0x1c build/debug.o
                                         0x48 (松开之前的大小)
 .eh_frame      0x00000000c0004284      0x13c build/memory.o
                                        0x17c (松开之前的大小)
 .eh_frame      0x00000000c00043c0       0x8c build/bitmap.o
                                         0xb8 (松开之前的大小)
 .eh_frame      0x00000000c000444c      0x140 build/string.o
                                        0x16c (松开之前的大小)
 .eh_frame      0x00000000c000458c      0x174 build/thread.o
                                        0x1b4 (松开之前的大小)
 .eh_frame      0x00000000c0004700      0x148 build/list.o
                                        0x188 (松开之前的大小)
 .eh_frame      0x00000000c0004848       0xd8 build/console.o
                                        0x118 (松开之前的大小)
 .eh_frame      0x00000000c0004920       0xd4 build/sync.o
                                        0x114 (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c0006000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c0006000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c0006000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c0006000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c0006000        0x0
 *(.got)
 .got           0x00000000c0006000        0x0 build/main.o
 *(.igot)
                0x00000000c0006ff4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c0006000        0xc
 *(.got.plt)
 .got.plt       0x00000000c0006000        0xc build/main.o
                0x00000000c0006000                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)
 .igot.plt      0x00000000c000600c        0x0 build/main.o

.data           0x00000000c000600c       0xa0
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000600c        0x0 build/main.o
 .data          0x00000000c000600c        0x0 build/init.o
 .data          0x00000000c000600c        0x0 build/interrupt.o
 .data          0x00000000c000600c        0x0 build/timer.o
 .data          0x00000000c000600c       0x96 build/kernel.o
                0x00000000c000601e                intr_entry_table
 *fill*         0x00000000c00060a2        0x2 
 .data          0x00000000c00060a4        0x8 build/print.o
 .data          0x00000000c00060ac        0x0 build/debug.o
 .data          0x00000000c00060ac        0x0 build/memory.o
 .data          0x00000000c00060ac        0x0 build/bitmap.o
 .data          0x00000000c00060ac        0x0 build/string.o
 .data          0x00000000c00060ac        0x0 build/thread.o
 .data          0x00000000c00060ac        0x0 build/list.o
 .data          0x00000000c00060ac        0x0 build/console.o
 .data          0x00000000c00060ac        0x0 build/sync.o

.data1
 *(.data1)
                0x00000000c00060ac                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c00060ac                . = .
                0x00000000c00060ac                __bss_start = .

.bss            0x00000000c00060c0      0x2b8
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c00060c0        0x0 build/main.o
 .bss           0x00000000c00060c0        0x0 build/init.o
 .bss           0x00000000c00060c0      0x108 build/interrupt.o
 .bss           0x00000000c00061c8        0x0 build/timer.o
 .bss           0x00000000c00061c8        0x0 build/debug.o
 .bss           0x00000000c00061c8        0x0 build/memory.o
 .bss           0x00000000c00061c8        0x0 build/bitmap.o
 .bss           0x00000000c00061c8        0x0 build/string.o
 .bss           0x00000000c00061c8        0x4 build/thread.o
 .bss           0x00000000c00061cc        0x0 build/list.o
 .bss           0x00000000c00061cc       0x1c build/console.o
 .bss           0x00000000c00061e8        0x0 build/sync.o
 *(COMMON)
 *fill*         0x00000000c00061e8       0x18 
 COMMON         0x00000000c0006200      0x124 build/interrupt.o
                0x00000000c0006200                intr_name
                0x00000000c00062a0                idt_table
 COMMON         0x00000000c0006324        0x4 build/timer.o
                0x00000000c0006324                ticks
 COMMON         0x00000000c0006328       0x2c build/memory.o
                0x00000000c0006328                user_pool
                0x00000000c0006338                kernel_vaddr
                0x00000000c0006344                kernel_pool
 COMMON         0x00000000c0006354       0x24 build/thread.o
                0x00000000c0006354                thread_ready_list
                0x00000000c0006364                thread_all_list
                0x00000000c0006374                main_thread
                0x00000000c0006378                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c0006378                . = ALIGN (0x4)
                0x00000000c0006378                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c0006378                . = ALIGN (0x4)
                0x00000000c0006378                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c0006378                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x29
 *(.comment)
 .comment       0x0000000000000000       0x29 build/main.o
                                         0x2a (松开之前的大小)
 .comment       0x0000000000000029       0x2a build/init.o
 .comment       0x0000000000000029       0x2a build/interrupt.o
 .comment       0x0000000000000029       0x2a build/timer.o
 .comment       0x0000000000000029       0x2a build/debug.o
 .comment       0x0000000000000029       0x2a build/memory.o
 .comment       0x0000000000000029       0x2a build/bitmap.o
 .comment       0x0000000000000029       0x2a build/string.o
 .comment       0x0000000000000029       0x2a build/thread.o
 .comment       0x0000000000000029       0x2a build/list.o
 .comment       0x0000000000000029       0x2a build/console.o
 .comment       0x0000000000000029       0x2a build/sync.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(build/kernel.bin elf32-i386)
