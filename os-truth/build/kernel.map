
分配公共符号
公共符号            大小              文件

kbd_buf             0x6c              build/keyboard.o
thread_ready_list   0x10              build/thread.o
thread_all_list     0x10              build/thread.o
user_pool           0x2c              build/memory.o
k_block_descs       0xa8              build/memory.o
intr_name           0x204             build/interrupt.o
main_thread         0x4               build/thread.o
ticks               0x4               build/timer.o
kernel_vaddr        0xc               build/memory.o
syscall_table       0x80              build/syscall-init.o
idt_table           0x204             build/interrupt.o
kernel_pool         0x2c              build/memory.o
pid_lock            0x1c              build/thread.o

舍弃的输入节

 .group         0x0000000000000000        0x8 build/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/main.o
 .group         0x0000000000000000        0x8 build/init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/init.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/init.o
 .group         0x0000000000000000        0x8 build/interrupt.o
 .group         0x0000000000000000        0x8 build/interrupt.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/interrupt.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/interrupt.o
 .group         0x0000000000000000        0x8 build/timer.o
 .group         0x0000000000000000        0x8 build/timer.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/timer.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/timer.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/timer.o
 .group         0x0000000000000000        0x8 build/debug.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/debug.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/debug.o
 .group         0x0000000000000000        0x8 build/memory.o
 .group         0x0000000000000000        0x8 build/memory.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/memory.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/memory.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/memory.o
 .group         0x0000000000000000        0x8 build/bitmap.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/bitmap.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/bitmap.o
 .group         0x0000000000000000        0x8 build/string.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/string.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/string.o
 .group         0x0000000000000000        0x8 build/thread.o
 .group         0x0000000000000000        0x8 build/thread.o
 .group         0x0000000000000000        0x8 build/thread.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/thread.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/thread.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/thread.o
 .group         0x0000000000000000        0x8 build/list.o
 .group         0x0000000000000000        0x8 build/list.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/list.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/list.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/list.o
 .group         0x0000000000000000        0x8 build/console.o
 .group         0x0000000000000000        0x8 build/console.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/console.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/console.o
 .group         0x0000000000000000        0x8 build/sync.o
 .group         0x0000000000000000        0x8 build/sync.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/sync.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/sync.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/sync.o
 .group         0x0000000000000000        0x8 build/keyboard.o
 .group         0x0000000000000000        0x8 build/keyboard.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/keyboard.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/keyboard.o
 .group         0x0000000000000000        0x8 build/ioqueue.o
 .group         0x0000000000000000        0x8 build/ioqueue.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/ioqueue.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/ioqueue.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/ioqueue.o
 .group         0x0000000000000000        0x8 build/tss.o
 .group         0x0000000000000000        0x8 build/tss.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/tss.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/tss.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/tss.o
 .group         0x0000000000000000        0x8 build/process.o
 .group         0x0000000000000000        0x8 build/process.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/process.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/process.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/process.o
 .group         0x0000000000000000        0x8 build/syscall.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/syscall.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/syscall.o
 .group         0x0000000000000000        0x8 build/stdio.o
 .group         0x0000000000000000        0x8 build/stdio.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/stdio.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/stdio.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/stdio.o
 .group         0x0000000000000000        0x8 build/syscall-init.o
 .group         0x0000000000000000        0x8 build/syscall-init.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/syscall-init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/syscall-init.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/syscall-init.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0xc0001500
LOAD build/main.o
LOAD build/init.o
LOAD build/interrupt.o
LOAD build/timer.o
LOAD build/kernel.o
LOAD build/print.o
LOAD build/debug.o
LOAD build/memory.o
LOAD build/bitmap.o
LOAD build/string.o
LOAD build/thread.o
LOAD build/list.o
LOAD build/switch.o
LOAD build/console.o
LOAD build/sync.o
LOAD build/keyboard.o
LOAD build/ioqueue.o
LOAD build/tss.o
LOAD build/process.o
LOAD build/syscall.o
LOAD build/stdio.o
LOAD build/syscall-init.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 build/main.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 build/main.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 build/main.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 build/main.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x4323
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500      0x3da build/main.o
                0x00000000c0001500                main
                0x00000000c00015a8                k_thread_a
                0x00000000c000169a                k_thread_b
                0x00000000c000178c                u_prog_a
                0x00000000c0001833                u_prog_b
 .text.__x86.get_pc_thunk.bx
                0x00000000c00018da        0x4 build/main.o
                0x00000000c00018da                __x86.get_pc_thunk.bx
 .text          0x00000000c00018de       0x52 build/init.o
                0x00000000c00018de                init_all
 .text          0x00000000c0001930      0x583 build/interrupt.o
                0x00000000c0001d55                intr_enable
                0x00000000c0001d88                intr_disable
                0x00000000c0001dbb                intr_set_status
                0x00000000c0001de3                intr_get_status
                0x00000000c0001e0a                register_handler
                0x00000000c0001e33                idt_init
 .text.__x86.get_pc_thunk.ax
                0x00000000c0001eb3        0x4 build/interrupt.o
                0x00000000c0001eb3                __x86.get_pc_thunk.ax
 .text          0x00000000c0001eb7      0x18d build/timer.o
                0x00000000c0001fdc                timer_init
 *fill*         0x00000000c0002044        0xc 
 .text          0x00000000c0002050      0x67e build/kernel.o
                0x00000000c0002050                intr_exit
                0x00000000c00026a4                syscall_handler
 *fill*         0x00000000c00026ce        0x2 
 .text          0x00000000c00026d0      0x1a0 build/print.o
                0x00000000c00026d0                put_str
                0x00000000c00026f4                put_int
                0x00000000c0002775                put_char
                0x00000000c000284c                set_cursor
 .text          0x00000000c0002870       0xf4 build/debug.o
                0x00000000c0002870                panic_spin
 .text          0x00000000c0002964     0x1058 build/memory.o
                0x00000000c0002a6b                pte_ptr
                0x00000000c0002aa5                pde_ptr
                0x00000000c0002c0d                malloc_page
                0x00000000c0002cb5                get_kernel_pages
                0x00000000c0002d29                get_user_pages
                0x00000000c0002d9d                get_a_page
                0x00000000c0002ee6                addr_v2p
                0x00000000c0002f1c                block_desc_init
                0x00000000c0002ffa                sys_malloc
                0x00000000c0003310                pfree
                0x00000000c0003486                mfree_page
                0x00000000c0003580                sys_free
                0x00000000c0003956                mem_init
 .text          0x00000000c00039bc      0x22e build/bitmap.o
                0x00000000c00039bc                bitmap_init
                0x00000000c00039ef                bitmap_scan_test
                0x00000000c0003a39                bitmap_scan
                0x00000000c0003b4e                bitmap_set
 .text          0x00000000c0003bea      0x2dd build/string.o
                0x00000000c0003bea                memset
                0x00000000c0003c27                memcpy
                0x00000000c0003c6c                memcmp
                0x00000000c0003cd4                strcpy
                0x00000000c0003d0e                strlen
                0x00000000c0003d44                strcmp
                0x00000000c0003d9f                strchr
                0x00000000c0003de2                strrchr
                0x00000000c0003e2b                strcat
                0x00000000c0003e7a                strchrs
 .text          0x00000000c0003ec7      0x4c8 build/thread.o
                0x00000000c0003ec7                running_thread
                0x00000000c0003f65                thread_create
                0x00000000c0003fe9                init_thread
                0x00000000c00040a2                thread_start
                0x00000000c0004188                schedule
                0x00000000c0004239                thread_block
                0x00000000c000427d                thread_unblock
                0x00000000c0004318                thread_init
 .text.__x86.get_pc_thunk.dx
                0x00000000c000438f        0x4 build/thread.o
                0x00000000c000438f                __x86.get_pc_thunk.dx
 .text          0x00000000c0004393      0x25f build/list.o
                0x00000000c0004393                list_init
                0x00000000c00043cb                list_insert_before
                0x00000000c000441f                list_push
                0x00000000c0004447                list_append
                0x00000000c000446f                list_remove
                0x00000000c00044b8                list_pop
                0x00000000c00044e4                elem_find
                0x00000000c0004529                list_traversal
                0x00000000c0004590                list_len
                0x00000000c00045cf                list_empty
 *fill*         0x00000000c00045f2        0xe 
 .text          0x00000000c0004600       0x15 build/switch.o
                0x00000000c0004600                switch_to
 .text          0x00000000c0004615      0x119 build/console.o
                0x00000000c0004615                console_init
                0x00000000c0004640                console_acquire
                0x00000000c000466b                console_release
                0x00000000c0004696                console_put_str
                0x00000000c00046c6                console_put_char
                0x00000000c00046fe                console_put_int
 .text          0x00000000c000472e      0x24c build/sync.o
                0x00000000c000472e                sema_init
                0x00000000c0004768                lock_init
                0x00000000c00047a2                sema_down
                0x00000000c0004850                sema_up
                0x00000000c00048c8                lock_acquire
                0x00000000c0004927                lock_release
 .text          0x00000000c000497a      0x311 build/keyboard.o
                0x00000000c0004c29                keyboard_init
 .text          0x00000000c0004c8b      0x27e build/ioqueue.o
                0x00000000c0004c8b                ioqueue_init
                0x00000000c0004d05                ioq_full
                0x00000000c0004d33                ioq_empty
                0x00000000c0004dba                ioq_getchar
                0x00000000c0004e60                ioq_putchar
 .text          0x00000000c0004f09      0x1b2 build/tss.o
                0x00000000c0004f09                update_tss_esp
                0x00000000c0004f9a                tss_init
 .text          0x00000000c00050bb      0x343 build/process.o
                0x00000000c00050bb                start_process
                0x00000000c00051cf                page_dir_activate
                0x00000000c0005214                process_activate
                0x00000000c0005252                create_page_dir
                0x00000000c00052db                create_user_vaddr_bitmap
                0x00000000c0005336                process_execute
 .text          0x00000000c00053fe       0x98 build/syscall.o
                0x00000000c00053fe                getpid
                0x00000000c000541d                write
                0x00000000c0005446                malloc
                0x00000000c000546f                free
 .text          0x00000000c0005496      0x2c0 build/stdio.o
                0x00000000c0005527                vsprintf
                0x00000000c00056b3                sprintf
                0x00000000c00056ed                printf
 .text          0x00000000c0005756       0xcd build/syscall-init.o
                0x00000000c0005756                sys_getpid
                0x00000000c0005779                sys_write
                0x00000000c00057ac                syscall_init
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000c0005824      0x6a5
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c0005824       0xcc build/main.o
 .rodata        0x00000000c00058f0        0xa build/init.o
 *fill*         0x00000000c00058fa        0x2 
 .rodata        0x00000000c00058fc      0x2bd build/interrupt.o
 .rodata        0x00000000c0005bb9       0x23 build/timer.o
 .rodata        0x00000000c0005bdc       0x41 build/debug.o
 *fill*         0x00000000c0005c1d        0x3 
 .rodata        0x00000000c0005c20      0x133 build/memory.o
 *fill*         0x00000000c0005d53        0x1 
 .rodata        0x00000000c0005d54       0x7b build/thread.o
 *fill*         0x00000000c0005dcf        0x1 
 .rodata        0x00000000c0005dd0       0x4a build/sync.o
 .rodata        0x00000000c0005e1a       0x36 build/keyboard.o
 .rodata        0x00000000c0005e50       0x27 build/tss.o
 *fill*         0x00000000c0005e77        0x1 
 .rodata        0x00000000c0005e78       0x2a build/process.o
 .rodata        0x00000000c0005ea2       0x27 build/syscall-init.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c0005ecc     0x10c8
 *(.eh_frame)
 .eh_frame      0x00000000c0005ecc       0xc4 build/main.o
 .eh_frame      0x00000000c0005f90       0x24 build/init.o
                                         0x50 (松开之前的大小)
 .eh_frame      0x00000000c0005fb4      0x1b4 build/interrupt.o
                                        0x1e0 (松开之前的大小)
 .eh_frame      0x00000000c0006168       0x94 build/timer.o
                                         0xd4 (松开之前的大小)
 .eh_frame      0x00000000c00061fc       0x1c build/debug.o
                                         0x48 (松开之前的大小)
 .eh_frame      0x00000000c0006218      0x2dc build/memory.o
                                        0x31c (松开之前的大小)
 .eh_frame      0x00000000c00064f4       0x8c build/bitmap.o
                                         0xb8 (松开之前的大小)
 .eh_frame      0x00000000c0006580      0x140 build/string.o
                                        0x16c (松开之前的大小)
 .eh_frame      0x00000000c00066c0      0x198 build/thread.o
                                        0x1d8 (松开之前的大小)
 .eh_frame      0x00000000c0006858      0x148 build/list.o
                                        0x188 (松开之前的大小)
 .eh_frame      0x00000000c00069a0       0xd8 build/console.o
                                        0x118 (松开之前的大小)
 .eh_frame      0x00000000c0006a78       0xd4 build/sync.o
                                        0x114 (松开之前的大小)
 .eh_frame      0x00000000c0006b4c       0x68 build/keyboard.o
                                         0xa8 (松开之前的大小)
 .eh_frame      0x00000000c0006bb4      0x114 build/ioqueue.o
                                        0x154 (松开之前的大小)
 .eh_frame      0x00000000c0006cc8       0x6c build/tss.o
                                         0xac (松开之前的大小)
 .eh_frame      0x00000000c0006d34       0xd8 build/process.o
                                        0x118 (松开之前的大小)
 .eh_frame      0x00000000c0006e0c       0x8c build/syscall.o
                                         0xb8 (松开之前的大小)
 .eh_frame      0x00000000c0006e98       0x90 build/stdio.o
                                         0xd0 (松开之前的大小)
 .eh_frame      0x00000000c0006f28       0x6c build/syscall-init.o
                                         0xac (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c0008000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c0008000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c0008000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c0008000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c0008000        0x0
 *(.got)
 .got           0x00000000c0008000        0x0 build/main.o
 *(.igot)
                0x00000000c0008ff4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c0008000        0xc
 *(.got.plt)
 .got.plt       0x00000000c0008000        0xc build/main.o
                0x00000000c0008000                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)
 .igot.plt      0x00000000c000800c        0x0 build/main.o

.data           0x00000000c0008020      0x156
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c0008020        0x0 build/main.o
 .data          0x00000000c0008020        0x0 build/init.o
 .data          0x00000000c0008020        0x0 build/interrupt.o
 .data          0x00000000c0008020        0x0 build/timer.o
 .data          0x00000000c0008020       0xc0 build/kernel.o
                0x00000000c0008020                intr_entry_table
 .data          0x00000000c00080e0        0x8 build/print.o
 .data          0x00000000c00080e8        0x0 build/debug.o
 .data          0x00000000c00080e8        0x0 build/memory.o
 .data          0x00000000c00080e8        0x0 build/bitmap.o
 .data          0x00000000c00080e8        0x0 build/string.o
 .data          0x00000000c00080e8        0x0 build/thread.o
 .data          0x00000000c00080e8        0x0 build/list.o
 .data          0x00000000c00080e8        0x0 build/console.o
 .data          0x00000000c00080e8        0x0 build/sync.o
 *fill*         0x00000000c00080e8       0x18 
 .data          0x00000000c0008100       0x76 build/keyboard.o
 .data          0x00000000c0008176        0x0 build/ioqueue.o
 .data          0x00000000c0008176        0x0 build/tss.o
 .data          0x00000000c0008176        0x0 build/process.o
 .data          0x00000000c0008176        0x0 build/syscall.o
 .data          0x00000000c0008176        0x0 build/stdio.o
 .data          0x00000000c0008176        0x0 build/syscall-init.o

.data1
 *(.data1)
                0x00000000c0008176                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c0008176                . = .
                0x00000000c0008176                __bss_start = .

.bss            0x00000000c0008180      0xb80
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c0008180        0x0 build/main.o
 .bss           0x00000000c0008180        0x0 build/init.o
 .bss           0x00000000c0008180      0x408 build/interrupt.o
 .bss           0x00000000c0008588        0x0 build/timer.o
 .bss           0x00000000c0008588        0x0 build/debug.o
 .bss           0x00000000c0008588        0x0 build/memory.o
 .bss           0x00000000c0008588        0x0 build/bitmap.o
 .bss           0x00000000c0008588        0x0 build/string.o
 .bss           0x00000000c0008588        0x6 build/thread.o
 .bss           0x00000000c000858e        0x0 build/list.o
 *fill*         0x00000000c000858e        0x2 
 .bss           0x00000000c0008590       0x1c build/console.o
 .bss           0x00000000c00085ac        0x0 build/sync.o
 .bss           0x00000000c00085ac       0x14 build/keyboard.o
 .bss           0x00000000c00085c0        0x0 build/ioqueue.o
 .bss           0x00000000c00085c0       0x6c build/tss.o
 .bss           0x00000000c000862c        0x0 build/process.o
 .bss           0x00000000c000862c        0x0 build/syscall.o
 .bss           0x00000000c000862c        0x0 build/stdio.o
 .bss           0x00000000c000862c        0x0 build/syscall-init.o
 *(COMMON)
 *fill*         0x00000000c000862c       0x14 
 COMMON         0x00000000c0008640      0x424 build/interrupt.o
                0x00000000c0008640                intr_name
                0x00000000c0008860                idt_table
 COMMON         0x00000000c0008a64        0x4 build/timer.o
                0x00000000c0008a64                ticks
 *fill*         0x00000000c0008a68       0x18 
 COMMON         0x00000000c0008a80      0x12c build/memory.o
                0x00000000c0008a80                user_pool
                0x00000000c0008ac0                k_block_descs
                0x00000000c0008b68                kernel_vaddr
                0x00000000c0008b80                kernel_pool
 COMMON         0x00000000c0008bac       0x40 build/thread.o
                0x00000000c0008bac                thread_ready_list
                0x00000000c0008bbc                thread_all_list
                0x00000000c0008bcc                main_thread
                0x00000000c0008bd0                pid_lock
 *fill*         0x00000000c0008bec       0x14 
 COMMON         0x00000000c0008c00       0x6c build/keyboard.o
                0x00000000c0008c00                kbd_buf
 *fill*         0x00000000c0008c6c       0x14 
 COMMON         0x00000000c0008c80       0x80 build/syscall-init.o
                0x00000000c0008c80                syscall_table
                0x00000000c0008d00                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c0008d00                . = ALIGN (0x4)
                0x00000000c0008d00                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c0008d00                . = ALIGN (0x4)
                0x00000000c0008d00                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c0008d00                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x29
 *(.comment)
 .comment       0x0000000000000000       0x29 build/main.o
                                         0x2a (松开之前的大小)
 .comment       0x0000000000000029       0x2a build/init.o
 .comment       0x0000000000000029       0x2a build/interrupt.o
 .comment       0x0000000000000029       0x2a build/timer.o
 .comment       0x0000000000000029       0x2a build/debug.o
 .comment       0x0000000000000029       0x2a build/memory.o
 .comment       0x0000000000000029       0x2a build/bitmap.o
 .comment       0x0000000000000029       0x2a build/string.o
 .comment       0x0000000000000029       0x2a build/thread.o
 .comment       0x0000000000000029       0x2a build/list.o
 .comment       0x0000000000000029       0x2a build/console.o
 .comment       0x0000000000000029       0x2a build/sync.o
 .comment       0x0000000000000029       0x2a build/keyboard.o
 .comment       0x0000000000000029       0x2a build/ioqueue.o
 .comment       0x0000000000000029       0x2a build/tss.o
 .comment       0x0000000000000029       0x2a build/process.o
 .comment       0x0000000000000029       0x2a build/syscall.o
 .comment       0x0000000000000029       0x2a build/stdio.o
 .comment       0x0000000000000029       0x2a build/syscall-init.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(build/kernel.bin elf32-i386)
