;文件说明:主引导程序
;创建日期:2020-2-13 23:41
;-----------------------------------------------------
SECTION MBR vstart=0x7c00
    mov ax,cs
    mov ds,ax
    mov es,ax
    mov ss,ax
    mov fs,ax
    mov sp,0x7c00
;清屏利用0x06号中断,上卷全部行,则可清屏
;-----------------------------------------------------
;INT 0x10 功能号:0x06 功能描述:上卷窗口
;-----------------------------------------------------
;输入:
;AH 功能号= 0x06
;AL = 上卷的行数(如果为0,表示全部)
;BH = 上卷行的属性
;(CL,CH) = 窗口左上角的(X,Y)位置
;(DL,DH) = 窗口右下角的(X,Y)位置
;无返回值:
    mov ax,0x0600
    mov bx,0x0700
    mov cx,0            ;左上角:(0,0)
    mov dx,0x184f       ;右下角(80,25)
                        ;VGA文本模式中,一行只能容纳80个字符,共25行
                        ;下标从0开始,所以0x18=24,0x4f=79
    int 0x10            ;int 0x10

;;;;;;   下面这三行获取光标位置   ;;;;;;
;.get_cursor 获取当前光标位置,在光标位置处打印字符.
    mov ah,3            ;输入:3号子功能,获取光标位置,需要存入ah寄存器
    mov bh,0            ;bh 寄存器存储的是带获取光标的页号

    int 10              ;输出:ch=光标开始行,cl=光标结束行
                        ;dh=光标所在行号,dl=光标所在列号

;;;;;;   光标获取位置结束   ;;;;;;

;;;;;;   打印字符串   ;;;;;;
    ;用0x10中断,13号子功能,打印字符串
    mov ax,message
    mov bp,ax           ;es:bp 为串首地址


    ;光标位置需要用到dx寄存器中内容,cx中的光标位置可忽略
    mov cx,12           ;cx,串长度,不包括结束符0的字符个数
    mov ax,0x1301       ;子功能号:13,显示字符及属性,存入ah寄存器
                        ;al,设置写字符方式 ah=01:显示字符串,光标跟随移动
    mov bx,0x0f         ;bh,存储要显示的页号,此处是0页
                        ;bl,字符属性
    int 0x10            ;BIOS 0x10号中断
;;;;;;   打印字符串结束   ;;;;;;

    jmp $

    message db "hello world!"
    times 510-($-$$) db 0
    db 0x55,0xaa
